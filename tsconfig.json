{
  "compilerOptions": {
    "baseUrl": ".",
    "outDir": "build/dist", //输出目录
    "paths":{
      "@assets": ["src/assets"],
      "@common/*": ["src/common/*"],
      "@components/*": ["src/components/*"],
      "@utils/*": ["src/utils/*"],
      "@business": ["src/widget/business"],
      "@pageBase/*": ["src/widget/pageBase/*"],
      "@services/*": ["src/services/*"]
    },
    "module": "esnext",
    "target": "es5", //编译目标平台
    "lib": ["es6", "dom"], //添加需要的解析的语法，否则TS会检测出错。
    "sourceMap": true, //把 ts 文件编译成 js 文件的时候，同时生成对应的 map 文件
    "allowJs": true,
    "jsx": "react",
    "moduleResolution": "node", // 模块的解析
    "forceConsistentCasingInFileNames": true,
    "noImplicitReturns": true,
    "noImplicitThis": true,
    "noImplicitAny": true, // 为 false 时，如果编译器无法根据变量的使用来判断类型时，将用 any 类型代替。为 true 时，进行强类型检查，会报错
    "importHelpers": true,
    "strictNullChecks": true,
    "suppressImplicitAnyIndexErrors": true,
    "noUnusedLocals": true,
    "removeComments": true, //编译 js 的时候，删除掉注释
    "experimentalDecorators": true, //启用实验性的ES装饰器。
    "emitDecoratorMetadata": true //给源码里的装饰器声明加上设计类型元数据。查看issue #2577了解更多信息。
    
  },
  // 不包含的编译目录
  "exclude": [
    "node_modules",
    "build",
    "scripts",
    "acceptance-tests",
    "webpack",
    "jest",
    "src/setupTests.ts"
  ],
}
